# Generated by Django 5.1 on 2024-10-03 00:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actors',
            fields=[
                ('actor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('picture_url', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'actors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Awardcategorytypes',
            fields=[
                ('award_cat_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('award_cat_type', models.CharField(max_length=50)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'awardcategorytypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Awardnames',
            fields=[
                ('award_name_id', models.AutoField(primary_key=True, serialize=False)),
                ('award_name', models.CharField(max_length=50)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'awardnames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Directors',
            fields=[
                ('director_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('picture_url', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'directors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Films',
            fields=[
                ('film_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('picture_url', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'films',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('genre_name', models.CharField(max_length=80)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'genres',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating_value', models.DecimalField(decimal_places=1, max_digits=2)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'ratings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Awardcategories',
            fields=[
                ('award_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('award_category_name', models.CharField(max_length=100)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('award_cat_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awardcategorytypes')),
            ],
            options={
                'db_table': 'awardcategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Awardsandcategories',
            fields=[
                ('award_and_cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('award_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awardcategories')),
                ('award_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awardnames')),
            ],
            options={
                'db_table': 'awardsandcategories',
                'managed': True,
                'unique_together': {('award_name', 'award_category')},
            },
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('award_id', models.AutoField(primary_key=True, serialize=False)),
                ('year_won', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('award_and_cat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awardsandcategories')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
            ],
            options={
                'db_table': 'awards',
                'managed': True,
                'unique_together': {('award_and_cat', 'film'), ('award_and_cat', 'year_won')},
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('creation_date', models.DateTimeField()),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.comments')),
            ],
            options={
                'db_table': 'comments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filmsandactors',
            fields=[
                ('film_actor_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.actors')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
            ],
            options={
                'db_table': 'filmsandactors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filmsandcomments',
            fields=[
                ('film_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.comments')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
            ],
            options={
                'db_table': 'filmsandcomments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filmsanddirectors',
            fields=[
                ('film_director_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.directors')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
            ],
            options={
                'db_table': 'filmsanddirectors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filmsandgenres',
            fields=[
                ('film_genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.genres')),
            ],
            options={
                'db_table': 'filmsandgenres',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('registration_date', models.DateTimeField()),
                ('picture_url', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.roles')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Userfilmlists',
            fields=[
                ('list_id', models.AutoField(primary_key=True, serialize=False)),
                ('list_name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.users')),
            ],
            options={
                'db_table': 'userfilmlists',
                'managed': True,
                'unique_together': {('user', 'list_name')},
            },
        ),
        migrations.CreateModel(
            name='Privatemessages',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_sent', models.DateTimeField()),
                ('content', models.TextField()),
                ('read_status', models.BooleanField()),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='privatemessages_receiver_set', to='DjangoFilmsApp.users')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.users')),
            ],
            options={
                'db_table': 'privatemessages',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.users'),
        ),
        migrations.CreateModel(
            name='Actorsandawards',
            fields=[
                ('actor_award_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.actors')),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awards')),
            ],
            options={
                'db_table': 'actorsandawards',
                'managed': True,
                'unique_together': {('actor', 'award')},
            },
        ),
        migrations.CreateModel(
            name='Directorsandawards',
            fields=[
                ('director_award_id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.awards')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.directors')),
            ],
            options={
                'db_table': 'directorsandawards',
                'managed': True,
                'unique_together': {('director', 'award')},
            },
        ),
        migrations.CreateModel(
            name='Filmsandlists',
            fields=[
                ('film_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.userfilmlists')),
            ],
            options={
                'db_table': 'filmsandlists',
                'managed': True,
                'unique_together': {('list', 'film')},
            },
        ),
        migrations.CreateModel(
            name='Filmsandratingbyusers',
            fields=[
                ('film_rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.films')),
                ('rating', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.ratings')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DjangoFilmsApp.users')),
            ],
            options={
                'db_table': 'filmsandratingbyusers',
                'managed': True,
                'unique_together': {('film', 'user')},
            },
        ),
    ]
